{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e00\u5207\u7684\u8d77\u70b9","text":"<p>\u5728\u5927\u591a\u6570\u7f16\u7a0b\u7ade\u8d5b\u4e2d\uff0c<code>C++</code> \u662f\u4e3b\u6d41\u8bed\u8a00\uff0c\u800c\u5173\u4e8e <code>Java</code> \u548c <code>Python</code> \u7684\u7b97\u6cd5\u7ade\u8d5b\u8d44\u6599\u76f8\u5bf9\u8f83\u5c11\u3002</p> <p>AlgoTemplate \u65e8\u5728\u6784\u5efa\u4e00\u4e2a\u9002\u7528\u4e8e\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\u7684\u514d\u8d39\u5f00\u653e\u4e14\u6301\u7eed\u66f4\u65b0\u7684\u7b97\u6cd5\u6a21\u677f\u5e93\uff0c\u652f\u6301 <code>C++</code>\u3001<code>Java</code> \u548c <code>Python</code> \u8bed\u8a00\uff0c\u5e76\u4e13\u6ce8\u4e8e Acm \u8f93\u5165\u6a21\u5f0f\u4e0b\u7684\u5e94\u7528\u3002</p>"},{"location":"base/","title":"\u57fa\u7840\u7b97\u6cd5\u90e8\u5206\u7b80\u4ecb","text":"<p>\u672c\u7ae0\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u7840\u7b97\u6cd5\u7684\u5e38\u89c1\u6a21\u7248\uff0c\u5305\u62ec\u524d\u7f00\u548c\u4e0e\u5dee\u5206\u3001\u4e8c\u5206\u3001\u53cc\u6307\u9488\u3001\u4f4d\u8fd0\u7b97\u4ee5\u53ca\u6392\u5e8f\u7b97\u6cd5\u3002</p>"},{"location":"base/binary_search/","title":"\u4e8c\u5206","text":""},{"location":"base/binary_search/#_1","title":"\u5e8f\u5217\u4e8c\u5206","text":""},{"location":"base/binary_search/#_2","title":"\u7b54\u6848\u4e8c\u5206","text":""},{"location":"base/binary_search/#_3","title":"\u6d6e\u70b9\u6570\u4e8c\u5206","text":""},{"location":"base/prefix_difference/","title":"\u524d\u7f00\u548c\u4e0e\u5dee\u5206","text":""},{"location":"base/prefix_difference/#_1","title":"\u4e00\u7ef4\u524d\u7f00\u548c","text":"<p>\u4e00\u7ef4\u524d\u7f00\u548c\u53ef\u4ee5\u901a\u8fc7 \\(O(n)\\) \u7684\u9884\u5904\u7406\uff0c\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6570\u7ec4\u4e2d\u4e00\u6bb5\u533a\u95f4\u7684\u548c\u3002</p>"},{"location":"base/prefix_difference/#_2","title":"\u6a21\u7248\u9898","text":"<p>\u84dd\u6865OJ\uff1a\u4e00\u7ef4\u524d\u7f00\u548c</p>"},{"location":"base/prefix_difference/#_3","title":"\u4ee3\u7801\u6a21\u7248","text":"\u53c2\u8003\u5b9e\u73b0 C++JavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint a[100010];\nint s[100010];\nint main()\n{\n    int n,q;\n    scanf(\"%d %d\",&amp;n,&amp;q);\n    for(int i=1;i&lt;=n;i++){\n        scanf(\"%d\",&amp;a[i]);\n        s[i]=a[i]+s[i-1];\n    }\n    for(int i=1;i&lt;=q;i++){\n        int l,r;\n        scanf(\"%d%d\",&amp;l,&amp;r);\n        printf(\"%d\\n\",s[r]-s[l-1]);\n    }\n    return 0;\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int q = sc.nextInt();\n        int[] a = new int[n + 1];\n        int[] s = new int[n + 1];\n\n        for (int i = 1; i &lt;= n; i++) {\n            a[i] = sc.nextInt();\n            s[i] = a[i] + s[i - 1];\n        }\n\n        for (int i = 1; i &lt;= q; i++) {\n            int l = sc.nextInt();\n            int r = sc.nextInt();\n            System.out.println(s[r] - s[l - 1]);\n        }\n    }\n}\n</code></pre> <pre><code>n, q = map(int, input().split())\na = list(map(int, input().split()))\ns = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    s[i] = a[i - 1] + s[i - 1]\n\nfor _ in range(q):\n    l, r = map(int, input().split())\n    print(s[r] - s[l - 1])\n</code></pre>"},{"location":"base/prefix_difference/#_4","title":"\u4e00\u7ef4\u5dee\u5206","text":"<p>\u4e00\u7ef4\u5dee\u5206\u53ef\u4ee5\u901a\u8fc7 \\(O(n)\\) \u7684\u9884\u5904\u7406\uff0c\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u5185\u5bf9\u6570\u7ec4\u4e2d\u4e00\u6bb5\u533a\u95f4\u7684\u6570\u8fdb\u884c\u52a0\u51cf\u3002</p>"},{"location":"base/prefix_difference/#_5","title":"\u6a21\u7248\u9898","text":"<p>\u84dd\u6865OJ\uff1a\u4e00\u7ef4\u5dee\u5206</p>"},{"location":"base/prefix_difference/#_6","title":"\u4ee3\u7801\u6a21\u7248","text":"\u53c2\u8003\u5b9e\u73b0 C++JavaPython <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=2e5+10;\nint a[N],b[N];\nint n,m;\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;i++){\n        scanf(\"%d\",&amp;a[i]);\n        b[i]=a[i]-a[i-1];\n    }\n    for(int i=1;i&lt;=m;i++){\n        int l,r,d;\n        scanf(\"%d%d%d\",&amp;l,&amp;r,&amp;d);\n        b[l]+=d;\n        b[r+1]-=d;\n    }\n    for(int i=1;i&lt;=n;i++){\n        b[i]=b[i-1]+b[i];\n        printf(\"%d \",b[i]);\n    }\n} \n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int m = in.nextInt();\n        long[] a = new long[n + 1];\n        long[] b = new long[n + 2];\n\n        for (int i = 1; i &lt;= n; i++) {\n            a[i] = in.nextLong(); // \u8f93\u5165\u5e8f\u5217\n            b[i] = a[i] - a[i - 1];\n        }\n\n        while (m-- &gt; 0) {\n            int l = in.nextInt();\n            int r = in.nextInt();\n            int d = in.nextInt();\n            b[l] += d;\n            b[r + 1] -= d;\n        }\n\n        for (int i = 1; i &lt;= n; i++) {\n            b[i] = b[i - 1] + b[i];\n            System.out.print(b[i] + \" \");\n        }\n        System.out.println();\n    }\n}\n</code></pre> <pre><code>import os\nimport sys\nn,m=map(int,input().split())\na=[0]+list(map(int,input().split()))+[0]#len=n+2\nb=[0]*(n+2)\nfor i in range(1,n+1):\n    b[i]=a[i]-a[i-1]#\u5dee\u5206\u65b9\u7a0b\n\nfor i in  range(0,m):\n    l,r,d=map(int,input().split())\n    b[l]+=d\n    b[r+1]-=d\n\nfor i in range(1,n+1):\n    b[i]=b[i]+b[i-1]\n    print(b[i],end=\" \")\n</code></pre>"},{"location":"base/prefix_difference/#_7","title":"\u4e8c\u7ef4\u524d\u7f00\u548c","text":"<p>\u4e8c\u7ef4\u524d\u7f00\u548c\u53ef\u4ee5\u901a\u8fc7 \\(O(n\\times m)\\) \u7684\u9884\u5904\u7406\uff0c\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u548c\u3002</p>"},{"location":"base/prefix_difference/#_8","title":"\u6a21\u677f\u9898","text":"<p>\u84dd\u6865OJ:\u4e8c\u7ef4\u524d\u7f00\u548c</p>"},{"location":"base/prefix_difference/#_9","title":"\u4ee3\u7801\u6a21\u677f","text":"\u53c2\u8003\u5b9e\u73b0 C++JavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint a[1010][1010];\nint s[1010][1010];\nint main()\n{\n    int n,m,q;\n    scanf(\"%d %d %d\",&amp;n,&amp;m,&amp;q);\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            scanf(\"%d\",&amp;a[i][j]); \n        } \n    } \n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            s[i][j]=a[i][j]+s[i-1][j]+s[i][j-1]-s[i-1][j-1];\n        } \n    }\n    for(int i=1;i&lt;=q;i++){\n        int x1,y1,x2,y2;\n        scanf(\"%d %d %d %d\",&amp;x1,&amp;y1,&amp;x2,&amp;y2)\n        printf(\"%d\\n\",s[x2][y2]-s[x1-1][y2]-s[x2][y1-1]+s[x1-1][y1-1]); \n    }\n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt(); \n        int q = sc.nextInt();\n        int[][] a = new int[n + 1][m + 1];\n        int[][] s = new int[n + 1][m + 1];\n\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                a[i][j] = sc.nextInt();  \n            }  \n        }\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                s[i][j] = a[i][j] + s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1];\n            } \n        }\n        for (int i = 1; i &lt;= q; i++) {\n            int x1 = sc.nextInt();\n            int y1 = sc.nextInt();\n            int x2 = sc.nextInt();\n            int y2 = sc.nextInt();\n            System.out.println(s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1] \n        }\n    }  \n}\n</code></pre> <pre><code>n, m, q = map(int, input().split())\na = [[0] * (m + 1) for _ in range(n + 1)]\ns = [[0] * (m + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    row = list(map(int, input().split()))\n    for j in range(1, m + 1):\n        a[i][j] = row[j - 1]\n        s[i][j] = a[i][j] + s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1]\n\nfor _ in range(q):\n    x1, y1, x2, y2 = map(int, input().split())\n    result = s[x2][y2] - s[x1 - 1][y2] - s[x2][y1 - 1] + s[x1 - 1][y1 - 1]\n    print(result)\n</code></pre>"},{"location":"base/prefix_difference/#_10","title":"\u4e8c\u7ef4\u5dee\u5206","text":"<p>\u4e8c\u7ef4\u5dee\u5206\u53ef\u4ee5\u901a\u8fc7 \\(O(n\\times m)\\) \u7684\u9884\u5904\u7406\uff0c\u5728 \\(O(1)\\) \u7684\u65f6\u95f4\u5185\u5bf9\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u6570\u8fdb\u884c\u52a0\u51cf\u3002</p>"},{"location":"base/prefix_difference/#_11","title":"\u6a21\u677f\u9898","text":"<p>\u84dd\u6865OJ:\u4e8c\u7ef4\u5dee\u5206</p>"},{"location":"base/prefix_difference/#_12","title":"\u4ee3\u7801\u6a21\u677f","text":"\u53c2\u8003\u5b9e\u73b0 C++JavaPython <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint a[1010][1010];\nint b[1010][1010];\nint main()\n{\n    int n,m,q;\n    scanf(\"%d %d %d\",&amp;n,&amp;m,&amp;q);\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            scanf(\"%d\",&amp;a[i][j]);\n        }\n    }\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            b[i][j]=a[i][j]-a[i-1][j]-a[i][j-1]+a[i-1][j-1];\n        }\n    }\n    for(int i=1;i&lt;=q;i++){\n        int x1,y1,x2,y2,d;\n        scanf(\"%d %d %d %d %d\",&amp;x1,&amp;y1,&amp;x2,&amp;y2,&amp;d);\n        b[x1][y1]+=d;\n        b[x2+1][y1]-=d;\n        b[x1][y2+1]-=d;\n        b[x2+1][y2+1]+=d; \n    }\n    for(int i=1;i&lt;=n;i++){\n        for(int j=1;j&lt;=m;j++){\n            b[i][j]=b[i][j]+b[i-1][j]+b[i][j-1]-b[i-1][j-1];\n            printf(\"%d \",b[i][j]);\n        }\n        printf(\"\\n\"); \n    } \n}\n</code></pre> <pre><code>import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int q = sc.nextInt();\n        int[][] a = new int[n + 1][m + 1];\n        int[][] b = new int[n + 1][m + 1];\n\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                a[i][j] = sc.nextInt();\n            }\n        }\n\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                b[i][j] = a[i][j] - a[i - 1][j] - a[i][j - 1] + a[i - 1][j - 1];\n            }\n        }\n\n        for (int i = 1; i &lt;= q; i++) {\n            int x1 = sc.nextInt();\n            int y1 = sc.nextInt();\n            int x2 = sc.nextInt();\n            int y2 = sc.nextInt();\n            int d = sc.nextInt();\n            b[x1][y1] += d;\n            b[x2 + 1][y1] -= d;\n            b[x1][y2 + 1] -= d;\n            b[x2 + 1][y2 + 1] += d;\n        } \n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                b[i][j] = b[i][j] + b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1];\n                System.out.print(b[i][j] + \" \"); \n            } \n            System.out.println();\n        }\n    }  \n}\n</code></pre> <pre><code>n, m, q = map(int, input().split())\na = [[0] * (m + 1) for _ in range(n + 1)]\nb = [[0] * (m + 1) for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    row = list(map(int, input().split()))\n    for j in range(1, m + 1):\n        a[i][j] = row[j - 1]\n        b[i][j] = a[i][j] - a[i - 1][j] - a[i][j - 1] + a[i - 1][j - 1]\n\nfor _ in range(q):\n    x1, y1, x2, y2, d = map(int, input().split())\n    b[x1][y1] += d\n    b[x2 + 1][y1] -= d\n    b[x1][y2 + 1] -= d\n    b[x2 + 1][y2 + 1] += d\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        b[i][j] = b[i][j] + b[i - 1][j] + b[i][j - 1] - b[i - 1][j - 1]\n        print(b[i][j], end=\" \")\n    print()\n</code></pre>"},{"location":"base/prefix_difference/#_13","title":"\u7ec3\u4e60\u9898\u5355","text":"<p>\u84dd\u6865OJ:\u6c42\u548c \u84dd\u6865OJ:\u533a\u95f4\u6b21\u65b9\u548c \u84dd\u6865OJ:\u5b50\u4e32\u7b80\u5199 \u84dd\u6865OJ:\u4fe1\u8d56\u5e97\u94fa acwing:\u589e\u51cf\u5e8f\u5217 \u84dd\u6865OJ:\u68cb\u76d8 \u6d1b\u8c37:\u9886\u5730\u9009\u62e9</p>"}]}